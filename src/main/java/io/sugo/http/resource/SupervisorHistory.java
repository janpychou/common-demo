package io.sugo.http.resource;

public class SupervisorHistory {
  public static StringBuilder getHistory() {
    StringBuilder builder = new StringBuilder();

    builder.append("{\n");
    builder.append("    \"com_HyoaKhQMl_project_HkMe2UT1-\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:59:40.260Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_HkMe2UT1-\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_HkMe2UT1-\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:46:01.882Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_SkokF7iyW\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T11:36:26.291Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SkokF7iyW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SkokF7iyW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T10:43:46.997Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_BksuWesCg\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T12:30:00.272Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_BksuWesCg\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_district\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_area\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_latitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_longitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_phone_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_continent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_administrative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_ip\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_forward\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_refer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_user_agent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_args\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_cookie\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_build_number\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"session_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"bluetooth_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_bluetooth\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_brand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_model\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"radio\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"carrier\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_dpi\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_height\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_width\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"current_url\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referring_domain\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"host\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"distinct_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_nfc\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_telephone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_wifi\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"manufacturer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"duration\",\n");
    builder.append("                                        \"type\": \"float\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sdk_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"page_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"path_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_type\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_label\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_lib\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"token\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"from_binding\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"google_play_services\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ]\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_BksuWesCg\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T10:24:56.885Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_BkgUXLp1-\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:00:04.867Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_BkgUXLp1-\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_BkgUXLp1-\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:09:11.802Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_SkxWh77jkZ\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T10:21:41.144Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SkxWh77jkZ\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SkxWh77jkZ\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T10:21:28.922Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_By_0xvakW\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:06:55.404Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_By_0xvakW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_By_0xvakW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:06:55.234Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_rkZRrQsJb\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T10:43:39.768Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_rkZRrQsJb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_rkZRrQsJb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T10:30:33.427Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_ryKPXUT1-\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:57:53.365Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_ryKPXUT1-\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_ryKPXUT1-\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:09:36.786Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_SJ7K9KTJW\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T07:55:49.422Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SJ7K9KTJW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_district\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_area\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_latitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_longitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_phone_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_continent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_administrative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_ip\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_forward\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_refer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_user_agent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_args\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_cookie\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_build_number\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"session_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"bluetooth_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_bluetooth\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_brand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_model\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"radio\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"carrier\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_dpi\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_height\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_width\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"current_url\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referring_domain\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"host\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"distinct_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_nfc\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_telephone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_wifi\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"manufacturer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"duration\",\n");
    builder.append("                                        \"type\": \"float\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sdk_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"page_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"path_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_type\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_label\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_lib\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"token\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"from_binding\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"google_play_services\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ]\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SJ7K9KTJW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T06:28:27.136Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SJ7K9KTJW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_district\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_area\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_latitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_longitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_phone_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_continent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_administrative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_ip\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_forward\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_refer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_user_agent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_args\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_cookie\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_build_number\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"session_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"bluetooth_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_bluetooth\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_brand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_model\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"radio\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"carrier\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_dpi\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_height\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_width\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"current_url\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referring_domain\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"host\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"distinct_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_nfc\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_telephone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_wifi\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"manufacturer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"duration\",\n");
    builder.append("                                        \"type\": \"float\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sdk_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"page_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"path_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_type\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_label\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_lib\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"token\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"from_binding\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"google_play_services\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ]\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SJ7K9KTJW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T06:04:47.539Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SJ7K9KTJW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SJ7K9KTJW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T06:04:43.598Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_H1sshw_yb\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:36:23.816Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:34:23.423Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:19:02.525Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:16:35.049Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:08:49.484Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:06:26.765Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:06:24.560Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:04:48.653Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T03:26:18.953Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": true,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T03:22:18.176Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T03:20:49.018Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_H1sshw_yb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T03:12:50.468Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_BkaZyCqk-\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_BkaZyCqk-\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_BkaZyCqk-\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:20:21.366Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_HJOGk09JW\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_HJOGk09JW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_district\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_area\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_latitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_longitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_phone_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_continent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_administrative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_ip\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_forward\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_refer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_user_agent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_args\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_cookie\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_build_number\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"session_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"bluetooth_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_bluetooth\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_brand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_model\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"radio\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"carrier\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_dpi\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_height\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_width\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"current_url\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referring_domain\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"host\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"distinct_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_nfc\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_telephone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_wifi\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"manufacturer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"duration\",\n");
    builder.append("                                        \"type\": \"float\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sdk_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"page_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"path_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_type\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_label\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_lib\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"token\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"from_binding\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"google_play_services\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ]\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_HJOGk09JW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:20:35.387Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_HJOGk09JW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_HJOGk09JW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:20:32.114Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_Hkz0ZaLTJZ\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:52:34.643Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_Hkz0ZaLTJZ\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_Hkz0ZaLTJZ\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:50:45.813Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_B1bNLpqyb\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:02:22.489Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_B1bNLpqyb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_B1bNLpqyb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:01:51.561Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:01:43.106Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_B1bNLpqyb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_B1bNLpqyb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T03:45:54.642Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T03:45:52.455Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_B1bNLpqyb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_B1bNLpqyb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T03:42:33.776Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"wuxianjiRT\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T03:33:31.948Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"lucene_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"wuxianjiRT\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"type\": \"string\",\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"url\",\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"EventDateTime\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            },\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SystemVersion\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventLabel\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"IP\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Extras\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceModel\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventHour\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventValue\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceAgent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SessionID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceVersion\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Source\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventAction\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventDate\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"City\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Media\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventScreen\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Campaign\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Creative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"OsScreen\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SystemName\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceBrand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"UserID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventDateTime\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ],\n");
    builder.append("                                \"spatialDimensions\": [],\n");
    builder.append("                                \"dimensionExclusions\": []\n");
    builder.append("                            }\n");
    builder.append("                        }\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"DAY\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 500000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/data1/druid/storage/wuxianjiRT\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"wuxianjiRT\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.213:9092,192.168.0.214:9092,192.168.0.216:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": true,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": null\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T02:07:08.182Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T01:45:53.903Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"lucene_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"wuxianjiRT\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"type\": \"string\",\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"url\",\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"EventDateTime\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            },\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SystemVersion\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventLabel\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"IP\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Extras\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceModel\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceAgent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventHour\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventValue\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SessionID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceVersion\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventAction\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Source\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventDate\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"City\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Media\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventScreen\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"OsScreen\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Campaign\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Creative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SystemName\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceBrand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"UserID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventDateTime\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ],\n");
    builder.append("                                \"spatialDimensions\": [],\n");
    builder.append("                                \"dimensionExclusions\": []\n");
    builder.append("                            }\n");
    builder.append("                        }\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"DAY\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 500000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/data1/druid/storage/wuxianjiRT\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"wuxianjiRT\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.213:9092,192.168.0.214:9092,192.168.0.216:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": true,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": null\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T01:35:52.704Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T13:46:29.985Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"lucene_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"wuxianjiRT\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"type\": \"string\",\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"url\",\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"EventDateTime\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            },\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SystemVersion\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventLabel\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"IP\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Extras\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceModel\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceAgent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventHour\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventValue\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SessionID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceVersion\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventAction\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Source\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventDate\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"City\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Media\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventScreen\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"OsScreen\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Campaign\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Creative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SystemName\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceBrand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"UserID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventDateTime\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ],\n");
    builder.append("                                \"spatialDimensions\": [],\n");
    builder.append("                                \"dimensionExclusions\": []\n");
    builder.append("                            }\n");
    builder.append("                        }\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"DAY\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 500000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/data1/druid/storage/wuxianjiRT\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"wuxianjiRT\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.213:9092,192.168.0.214:9092,192.168.0.216:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": true,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": null\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T13:24:04.821Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T13:23:31.900Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"lucene_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"wuxianjiRT\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"type\": \"string\",\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"url\",\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"EventDateTime\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            },\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SystemVersion\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventLabel\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"IP\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventScreen\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceModel\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"OsScreen\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceBrand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SystemName\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceAgent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"ClientDeviceVersion\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"UserID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"SessionID\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventAction\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"EventDateTime\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"Nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"City\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ],\n");
    builder.append("                                \"spatialDimensions\": [],\n");
    builder.append("                                \"dimensionExclusions\": []\n");
    builder.append("                            }\n");
    builder.append("                        }\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"DAY\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 500000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/data1/druid/storage/wuxianjiRT\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"wuxianjiRT\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.213:9092,192.168.0.214:9092,192.168.0.216:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": true,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": null\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T12:47:43.542Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_SyolXv61b\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:16:03.043Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SyolXv61b\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SyolXv61b\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:16:02.869Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_BkdmQvaJW\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:16:47.466Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_BkdmQvaJW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_BkdmQvaJW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:16:47.240Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_BkMVv8a1W\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:26:36.034Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_BkMVv8a1W\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_BkMVv8a1W\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:25:45.069Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_SJlv94spJb\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SJlv94spJb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_district\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_area\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_latitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_longitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_phone_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_continent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_administrative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_ip\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_forward\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_refer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_user_agent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_args\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_cookie\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_build_number\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"session_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"bluetooth_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_bluetooth\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_brand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_model\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"radio\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"carrier\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_dpi\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_height\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_width\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"current_url\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referring_domain\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"host\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"distinct_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_nfc\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_telephone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_wifi\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"manufacturer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"duration\",\n");
    builder.append("                                        \"type\": \"float\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sdk_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"page_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"path_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_type\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_label\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_lib\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"token\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"from_binding\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"google_play_services\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ]\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SJlv94spJb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T07:56:02.371Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SJlv94spJb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SJlv94spJb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T07:55:58.681Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_BJ3UMLTk-\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_BJ3UMLTk-\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_BJ3UMLTk-\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:05:07.682Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_ByU76ia1W\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_ByU76ia1W\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_ByU76ia1W\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T08:32:30.303Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_BJrY6U6JZ\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:00:21.043Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_BJrY6U6JZ\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_BJrY6U6JZ\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:52:43.998Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_rJKj7Qi1b\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_rJKj7Qi1b\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_rJKj7Qi1b\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T10:21:21.244Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_SyOxsTckZ\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:20:04.689Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SyOxsTckZ\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SyOxsTckZ\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:20:00.824Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:07:14.266Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SyOxsTckZ\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SyOxsTckZ\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T04:02:56.525Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_rJ5LHEokb\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:45:55.128Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_rJ5LHEokb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_rJ5LHEokb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T11:36:50.918Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_HkCSBViy-\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_HkCSBViy-\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_HkCSBViy-\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T11:36:39.207Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_S1PXibjJb\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T10:30:22.786Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_S1PXibjJb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_S1PXibjJb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T10:14:00.526Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T09:59:46.606Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_S1PXibjJb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_S1PXibjJb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T09:55:23.116Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_S1PXibjJb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": [\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"__time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_province\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_district\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_area\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_latitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_longitude\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_city_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_timezone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_phone_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_nation_code\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_continent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_administrative\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_operator\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_ip\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_forward\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_refer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_user_agent\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"browser_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_args\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_http_cookie\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"app_build_number\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"session_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"network\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"bluetooth_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_bluetooth\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_brand\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"device_model\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"system_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"radio\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"carrier\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_dpi\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_height\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"screen_width\",\n");
    builder.append("                                        \"type\": \"int\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_time\",\n");
    builder.append("                                        \"type\": \"date\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"current_url\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referrer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"referring_domain\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"host\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"distinct_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_nfc\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_telephone\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"has_wifi\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"manufacturer\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"duration\",\n");
    builder.append("                                        \"type\": \"float\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sdk_version\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"page_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"path_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_id\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_name\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_type\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"event_label\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"sugo_lib\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"token\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"from_binding\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    },\n");
    builder.append("                                    {\n");
    builder.append("                                        \"name\": \"google_play_services\",\n");
    builder.append("                                        \"type\": \"string\"\n");
    builder.append("                                    }\n");
    builder.append("                                ]\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_S1PXibjJb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T09:27:27.606Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T09:09:58.129Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_S1PXibjJb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_S1PXibjJb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T08:36:47.176Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_SkqHHEoJ-\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_SkqHHEoJ-\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_SkqHHEoJ-\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T11:36:34.583Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_r1pK7pK1b\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T12:29:52.202Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_r1pK7pK1b\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_r1pK7pK1b\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T09:27:31.088Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T09:26:53.551Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_r1pK7pK1b\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_r1pK7pK1b\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T09:19:01.025Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_ByBm02KyW\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T09:18:48.075Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_ByBm02KyW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_ByBm02KyW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T08:55:57.516Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_ryrlmwa1W\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:15:56.792Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_ryrlmwa1W\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_ryrlmwa1W\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:15:56.571Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_Sy-ISNjJW\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_Sy-ISNjJW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_Sy-ISNjJW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-06T11:36:41.341Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_HyMm0htJ-\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T12:29:57.221Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_HyMm0htJ-\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_HyMm0htJ-\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-05T08:55:54.606Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_ByGbQPpkW\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:16:09.925Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_ByGbQPpkW\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_ByGbQPpkW\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T03:16:09.789Z\"\n");
    builder.append("        }\n");
    builder.append("    ],\n");
    builder.append("    \"com_HyoaKhQMl_project_rkIL0Uakb\": [\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"NoopSupervisorSpec\"\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:56:13.900Z\"\n");
    builder.append("        },\n");
    builder.append("        {\n");
    builder.append("            \"spec\": {\n");
    builder.append("                \"type\": \"default_supervisor\",\n");
    builder.append("                \"dataSchema\": {\n");
    builder.append("                    \"dataSource\": \"com_HyoaKhQMl_project_rkIL0Uakb\",\n");
    builder.append("                    \"parser\": {\n");
    builder.append("                        \"parseSpec\": {\n");
    builder.append("                            \"format\": \"json\",\n");
    builder.append("                            \"dimensionsSpec\": {\n");
    builder.append("                                \"dynamicDimension\": true,\n");
    builder.append("                                \"dimensions\": []\n");
    builder.append("                            },\n");
    builder.append("                            \"timestampSpec\": {\n");
    builder.append("                                \"column\": \"d|sugo_timestamp\",\n");
    builder.append("                                \"format\": \"millis\"\n");
    builder.append("                            }\n");
    builder.append("                        },\n");
    builder.append("                        \"type\": \"standard\"\n");
    builder.append("                    },\n");
    builder.append("                    \"metricsSpec\": [],\n");
    builder.append("                    \"granularitySpec\": {\n");
    builder.append("                        \"type\": \"uniform\",\n");
    builder.append("                        \"segmentGranularity\": \"HOUR\",\n");
    builder.append("                        \"queryGranularity\": {\n");
    builder.append("                            \"type\": \"none\"\n");
    builder.append("                        },\n");
    builder.append("                        \"intervals\": null\n");
    builder.append("                    }\n");
    builder.append("                },\n");
    builder.append("                \"tuningConfig\": {\n");
    builder.append("                    \"type\": \"kafka\",\n");
    builder.append("                    \"maxRowsInMemory\": 10000000,\n");
    builder.append("                    \"maxRowsPerSegment\": 20000000,\n");
    builder.append("                    \"intermediatePersistPeriod\": \"PT10M\",\n");
    builder.append("                    \"basePersistDirectory\": \"/home/druid/tmp\",\n");
    builder.append("                    \"maxPendingPersists\": 0,\n");
    builder.append("                    \"indexSpec\": {\n");
    builder.append("                        \"bitmap\": {\n");
    builder.append("                            \"type\": \"concise\"\n");
    builder.append("                        },\n");
    builder.append("                        \"dimensionCompression\": null,\n");
    builder.append("                        \"metricCompression\": null\n");
    builder.append("                    },\n");
    builder.append("                    \"buildV9Directly\": true,\n");
    builder.append("                    \"reportParseExceptions\": false,\n");
    builder.append("                    \"handoffConditionTimeout\": 0,\n");
    builder.append("                    \"workerThreads\": null,\n");
    builder.append("                    \"chatThreads\": null,\n");
    builder.append("                    \"chatRetries\": 8,\n");
    builder.append("                    \"httpTimeout\": \"PT10S\",\n");
    builder.append("                    \"shutdownTimeout\": \"PT80S\",\n");
    builder.append("                    \"maxWarmCount\": 1,\n");
    builder.append("                    \"consumerThreadCount\": 2\n");
    builder.append("                },\n");
    builder.append("                \"ioConfig\": {\n");
    builder.append("                    \"topic\": \"com_HyoaKhQMl_project_rkIL0Uakb\",\n");
    builder.append("                    \"replicas\": 1,\n");
    builder.append("                    \"taskCount\": 1,\n");
    builder.append("                    \"taskDuration\": \"PT86400S\",\n");
    builder.append("                    \"consumerProperties\": {\n");
    builder.append("                        \"bootstrap.servers\": \"192.168.0.214:9092,192.168.0.216:9092,192.168.0.213:9092\"\n");
    builder.append("                    },\n");
    builder.append("                    \"startDelay\": \"PT5S\",\n");
    builder.append("                    \"period\": \"PT30S\",\n");
    builder.append("                    \"useEarliestOffset\": false,\n");
    builder.append("                    \"completionTimeout\": \"PT1800S\",\n");
    builder.append("                    \"lateMessageRejectionPeriod\": null\n");
    builder.append("                },\n");
    builder.append("                \"ipLibSpec\": {\n");
    builder.append("                    \"type\": \"none\"\n");
    builder.append("                },\n");
    builder.append("                \"luceneWriterConfig\": {\n");
    builder.append("                    \"maxBufferedDocs\": -1,\n");
    builder.append("                    \"ramBufferSizeMB\": 16,\n");
    builder.append("                    \"indexRefreshIntervalSeconds\": 3,\n");
    builder.append("                    \"isIndexMerge\": false,\n");
    builder.append("                    \"maxMergeAtOnce\": 5,\n");
    builder.append("                    \"maxMergedSegmentMB\": 256,\n");
    builder.append("                    \"maxMergesThreads\": 1,\n");
    builder.append("                    \"writeThreads\": 5,\n");
    builder.append("                    \"limiterMBPerSec\": 0\n");
    builder.append("                }\n");
    builder.append("            },\n");
    builder.append("            \"version\": \"2017-05-08T02:56:13.734Z\"\n");
    builder.append("        }\n");
    builder.append("    ]\n");
    builder.append("}");

    return builder;
  }
}
